// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SiTaG_API.Data;

#nullable disable

namespace SiTaG_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240220142141_Sitag_test_1.0")]
    partial class Sitag_test_10
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SiTaG_API.Entities.Animals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("CurrentWeight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("Id_Father")
                        .HasColumnType("int");

                    b.Property<int>("Id_Health_Status")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Mother")
                        .HasColumnType("int");

                    b.Property<int>("Id_Race")
                        .HasColumnType("int");

                    b.Property<int>("Id_Stage")
                        .HasColumnType("int");

                    b.Property<int>("Id_status")
                        .HasColumnType("int");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id_Father");

                    b.HasIndex("Id_Health_Status");

                    b.HasIndex("Id_Mother");

                    b.HasIndex("Id_Stage");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("SiTaG_API.Entities.AnimalsxCattles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Animal_Id")
                        .HasColumnType("int");

                    b.Property<int>("Cattle_Id")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("End_Date")
                        .HasColumnType("date");

                    b.Property<DateOnly>("Start_Date")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("Animal_Id");

                    b.HasIndex("Cattle_Id");

                    b.ToTable("AnimalsxCattles");
                });

            modelBuilder.Entity("SiTaG_API.Entities.ApplicationMethods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Application_Method")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ApplicationMethods");
                });

            modelBuilder.Entity("SiTaG_API.Entities.BirthServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Service_Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("BirthServices");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Births", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Birth_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Birth_Weight")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("Expected_Birth_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Id_Animal")
                        .HasColumnType("int");

                    b.Property<int>("Id_Birth_Service")
                        .HasColumnType("int");

                    b.Property<DateTime>("Service_Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Animal");

                    b.HasIndex("Id_Birth_Service");

                    b.ToTable("Births");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Cattles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cattle_Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cattles");
                });

            modelBuilder.Entity("SiTaG_API.Entities.CattlesxDivision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cattle_Id")
                        .HasColumnType("int");

                    b.Property<int>("Division_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cattle_Id");

                    b.HasIndex("Division_Id");

                    b.ToTable("CattlesxDivision");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Divisions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Division_Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("SiTaG_API.Entities.DivisionxLots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Division_Id")
                        .HasColumnType("int");

                    b.Property<int>("Lot_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Division_Id");

                    b.HasIndex("Lot_Id");

                    b.ToTable("DivisionxLots");
                });

            modelBuilder.Entity("SiTaG_API.Entities.HealthStatuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Health_Status")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("HealthStatuses");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Lots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("Lot_Area")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Lot_Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Lots");
                });

            modelBuilder.Entity("SiTaG_API.Entities.ProductTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Product_Type")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Id_Product_Type")
                        .HasColumnType("int");

                    b.Property<string>("Product_Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Product_Image")
                        .HasColumnType("text");

                    b.Property<string>("Product_Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Product_Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Product_Type");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SiTaG_API.Entities.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Stages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Stage_Name")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Treatments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("Application_Date")
                        .HasColumnType("date");

                    b.Property<decimal>("Dose")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Id_Animal")
                        .HasColumnType("int");

                    b.Property<int>("Id_Application_Method")
                        .HasColumnType("int");

                    b.Property<int>("Id_Product")
                        .HasColumnType("int");

                    b.Property<int>("Id_ServiceType")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Id_Animal");

                    b.HasIndex("Id_Application_Method");

                    b.HasIndex("Id_Product");

                    b.HasIndex("Id_ServiceType");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Animals", b =>
                {
                    b.HasOne("SiTaG_API.Entities.Animals", "Father")
                        .WithMany()
                        .HasForeignKey("Id_Father");

                    b.HasOne("SiTaG_API.Entities.HealthStatuses", "HealthStatus")
                        .WithMany()
                        .HasForeignKey("Id_Health_Status")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiTaG_API.Entities.Animals", "Mother")
                        .WithMany()
                        .HasForeignKey("Id_Mother");

                    b.HasOne("SiTaG_API.Entities.Stages", "Stage")
                        .WithMany()
                        .HasForeignKey("Id_Stage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Father");

                    b.Navigation("HealthStatus");

                    b.Navigation("Mother");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("SiTaG_API.Entities.AnimalsxCattles", b =>
                {
                    b.HasOne("SiTaG_API.Entities.Animals", "Animal")
                        .WithMany()
                        .HasForeignKey("Animal_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiTaG_API.Entities.Cattles", "Cattle")
                        .WithMany()
                        .HasForeignKey("Cattle_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Cattle");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Births", b =>
                {
                    b.HasOne("SiTaG_API.Entities.Animals", "Animal")
                        .WithMany()
                        .HasForeignKey("Id_Animal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiTaG_API.Entities.BirthServices", "BirthService")
                        .WithMany()
                        .HasForeignKey("Id_Birth_Service")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("BirthService");
                });

            modelBuilder.Entity("SiTaG_API.Entities.CattlesxDivision", b =>
                {
                    b.HasOne("SiTaG_API.Entities.Cattles", "Cattle")
                        .WithMany()
                        .HasForeignKey("Cattle_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiTaG_API.Entities.Divisions", "Division")
                        .WithMany()
                        .HasForeignKey("Division_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cattle");

                    b.Navigation("Division");
                });

            modelBuilder.Entity("SiTaG_API.Entities.DivisionxLots", b =>
                {
                    b.HasOne("SiTaG_API.Entities.Divisions", "Division")
                        .WithMany()
                        .HasForeignKey("Division_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiTaG_API.Entities.Lots", "Lot")
                        .WithMany()
                        .HasForeignKey("Lot_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Lot");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Products", b =>
                {
                    b.HasOne("SiTaG_API.Entities.ProductTypes", "ProductType")
                        .WithMany()
                        .HasForeignKey("Id_Product_Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("SiTaG_API.Entities.Treatments", b =>
                {
                    b.HasOne("SiTaG_API.Entities.Animals", "Animal")
                        .WithMany()
                        .HasForeignKey("Id_Animal")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiTaG_API.Entities.ApplicationMethods", "ApplicationMethod")
                        .WithMany()
                        .HasForeignKey("Id_Application_Method")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiTaG_API.Entities.Products", "Product")
                        .WithMany()
                        .HasForeignKey("Id_Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SiTaG_API.Entities.ServiceType", "ServiceType")
                        .WithMany()
                        .HasForeignKey("Id_ServiceType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("ApplicationMethod");

                    b.Navigation("Product");

                    b.Navigation("ServiceType");
                });
#pragma warning restore 612, 618
        }
    }
}
